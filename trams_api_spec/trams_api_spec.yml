swagger: "2.0"
info:
  description: "TRAMS Datastore API document"
  version: "1.0.0"
  title: "TRAMS Datastore API"
  termsOfService: "TBD"
  contact:
    email: "TBD@tbd.com"
  # license:
  #   name: "Apache 2.0"
  #   url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "tbd.swagger.io"
basePath: "/v1"
tags:
- name: "Academy"
  description: "Information about establishments"
- name: "Trust"
  description: "Information about Trusts and Multi-Academy Trusts"
- name: "Academy Transfer Project"
  description: "Information about academy transfer projects - a project represents any application to transfer academies between trusts in the system"
- name: "Projects"
  description: "Generic routes for searching across project types"
schemes:
- "https"
paths:
  /trust/{urn}:
    get:
      tags:
      - "Trust"
      summary: "Get information about a trust by URN"
      description: ""
      operationId: "getTrust"
      produces:
      - "application/json"
      parameters:
      - name: "urn"
        in: "path"
        description: "Universal reference of Trust to return"
        required: true
        type: "string"
      responses:
        "404":
          description: "Trust not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Trust"
      security:
      - ApiKeyAuth: []
  /trusts:
    get:
      tags:
      - "Trust"
      summary: "Search for trusts by matching fields in the body"
      description: ""
      operationId: "searchTrusts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Search trusts using optional fields"
        required: true
        schema:
          $ref: "#/definitions/SearchTrustsRequest"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TrustListItem"
      security:
      - ApiKeyAuth: []
  /academy/{urn}:
    get:
      tags:
      - "Academy"
      summary: "Get academy by URN"
      description: ""
      operationId: "getAcademy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "urn"
        in: "path"
        description: "Universal reference of Academy to return"
        required: true
        type: "string"
      responses:
        "404":
          description: "Academy not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Academy"
      security:
      - ApiKeyAuth: []
  /academyTransferProject/{urn}:
    get:
      tags:
      - "Academy Transfer Project"
      summary: "Get project by URN"
      description: ""
      operationId: "getProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "urn"
        in: "path"
        description: "Universal reference of Project to return"
        required: true
        type: "string"
      responses:
        "404":
          description: "Project not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AcademyTransferProject"
      security:
      - ApiKeyAuth: []
    patch:
      tags:
      - "Academy Transfer Project"
      summary: "Update a given Project by URN"
      description: ""
      operationId: "patchProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "urn"
        in: "path"
        description: "Universal reference of Project to return"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "Object containing fields to patch project object with"
        required: true
        schema:
          $ref: "#/definitions/UpdateAcademyTransferProjectRequest"
      responses:
        "404":
          description: "Project not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AcademyTransferProject"
      security:
      - ApiKeyAuth: []
  /project:
    post:
      tags:
      - "Academy Transfer Project"
      summary: "Create a new project"
      description: ""
      operationId: "createProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Create a new project"
        required: true
        schema:
          $ref: "#/definitions/CreateAcademyTransferProjectRequest"
      responses:
        "401":
          description: "Bad request"
        "201":
          description: "successfully created"
          schema:
            $ref: "#/definitions/AcademyTransferProject"
      security:
      - ApiKeyAuth: []
  /projects:
    get:
      tags:
      - "Projects"
      summary: "Search projects by matching fields in the body"
      description: ""
      operationId: "searchProjects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Search projects"
        required: true
        schema:
          $ref: "#/definitions/SearchProjectsRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProjectListItem"
      security:
      - ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
definitions:
  SearchTrustsRequest:
    type: "object"
    properties:
      urn:
        type: "string"
      name: 
        type: "string"
  CreateAcademyTransferProjectRequest:
    type: "object"
    properties:
      fields_to_create:
        $ref: "#/definitions/Placeholder"
  UpdateAcademyTransferProjectRequest:
    type: "object"
    properties:
      urn:
        type: "string"
      fields_to_update:
        $ref: "#/definitions/Placeholder"
  SearchProjectsRequest:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "Application to become"
        - "Application to transfer"
        - "Application for significant change"
      fields_to-search_on:
        $ref: "#/definitions/Placeholder"
  Trust:
    description: "Full view of a trust including academies"
    type: "object"
    properties:
      urn:
        type: "string"
        description: "Unique reference for a Trust"
      academies:
        type: "array"
        items:
          $ref: "#/definitions/Academy"
      details:
        $ref: "#/definitions/Placeholder"
  TrustListItem:
    description: "Partial information about a trust suitable for a paginated list"
    type: "object"
    properties:
      urn:
        type: "string"
        description: "Unique reference for a Trust"
      academies:
        type: "array"
        items: 
          $ref: "#/definitions/AcademyListItem"
  Academy:
    type: "object"
    properties:
      urn:
        type: "string"
        description: "Unique reference for an Academy"
      name:
        type: "string"
      financial:
        $ref: "#/definitions/Placeholder"
      concerns:
        $ref: "#/definitions/Placeholder"
  AcademyListItem:
    type: "object"
    properties:
      urn:
        type: "string"
        description: "Unique reference for an Academy"
      name:
        type: "string"
  AcademyTransferProject:
    description: "Full view of a project"
    type: "object"
    properties:
      urn:
        type: "string"
        description: "Unique reference for a project"
      details:
        $ref: "#/definitions/Placeholder"
  ProjectListItem:
    description: "Partial information about a project suitable for a paginated list"
    type: "object"
    properties:
      urn:
        type: "string"
        description: "Unique reference for a project"
      type:
        type: "string"
        enum:
        - "Application to become"
        - "Application to transfer"
        - "Application for significant change"
  Placeholder:
    description: "Placeholder object for data TBC"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"